{"version":3,"sources":["components/Card.js","components/CardList.js","components/Scroll.js","components/SearchBox.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","index","Scroll","props","style","overflowY","border","height","children","SearchBox","searchField","searchChange","type","placeholder","onChange","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAiBeA,EAfF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GACxB,OAGI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA4BH,EAA5B,cACrB,gCACI,6BAAKF,IACL,4BAAIC,WCKLK,EAXE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACf,OACI,8BACKA,EAAOC,KAAI,SAACC,EAAMC,GACvB,OAAQ,cAAC,EAAD,CAAkBR,GAAIK,EAAOG,GAAOR,GAAIF,KAAMO,EAAOG,GAAOV,KAAMC,MAAOM,EAAOG,GAAOT,OAA5ES,SCEZC,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAU,SAAUC,OAAO,kBAAmBC,OAAO,SAAlE,SACKJ,EAAMK,YCWJC,EAdG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKjB,UAAU,MAAf,SACI,uBACCA,UAAU,mCACVkB,KAAK,SACLC,YAAY,gBACZC,SAAUH,OC0CRI,G,wDA5CX,aAAc,IAAD,8BACT,gBAcJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAACC,YAAYF,EAAMG,OAAOC,SAdxC,EAAKC,MAAM,CACPxB,OAAQ,GACRqB,YAAY,IAJP,E,qDAQb,WAAoB,IAAD,OACfI,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAG,EAAKT,SAAS,CAACpB,OAAO6B,S,oBAS5C,WACI,MAA8BC,KAAKN,MAA5BxB,EAAP,EAAOA,OAAQqB,EAAf,EAAeA,YACTU,EAAiB/B,EAAOgC,QAAO,SAAAC,GACjC,OAAOA,EAAMxC,KAAKyC,cAAcC,SAASd,EAAYa,kBAEzD,OAAQlC,EAAOoC,OAGP,sBAAKxC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWiB,aAAciB,KAAKZ,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUlB,OAAQ+B,SANlC,6C,GA3BUM,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.020b9b31.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email, id}) => {\r\n    return (\r\n\r\n\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robots' src = {`https://robohash.org/${id}?200x200`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({robots}) => {\r\n    return (\r\n        <div>\r\n            {robots.map((user, index) => {\r\n        return  <Card key={index} id={robots[index].id} name={robots[index].name} email={robots[index].email}/>\r\n    })}\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY:'scroll', border:'5px solid black', height:'800px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React from 'react';\r\n\r\nconst SearchBox = ({searchField, searchChange}) => {\r\n    return(\r\n        <div className='pa2'>\r\n            <input\r\n             className='pa3 ba b--green bg-lightest-blue'\r\n             type='search'\r\n             placeholder='search robots'\r\n             onChange={searchChange}\r\n            />\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport Scroll from '../components/Scroll';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css'\r\n\r\nclass App extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            robots: [],\r\n            searchfield:''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response=>response.json())\r\n            .then(users =>this.setState({robots:users}));\r\n\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield:event.target.value})\r\n        \r\n       \r\n    }\r\n    render(){\r\n        const {robots ,searchfield} = this.state;\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        })\r\n        return !robots.length ?\r\n        <h1>Loading</h1> :\r\n        (\r\n                <div className='tc'>\r\n                    <h1 className='f1'>RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <CardList robots={filteredRobots}/>\r\n                    </Scroll>\r\n                    \r\n                </div>\r\n        );\r\n        \r\n\r\n        \r\n    }\r\n    \r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}